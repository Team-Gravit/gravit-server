-- V1__init_tables.sql
-- 초기 스키마 생성 (PostgreSQL)

-- 1) 기초 테이블
CREATE TABLE users
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email              VARCHAR(255) NOT NULL,
    provider_id        VARCHAR(255) NOT NULL,
    nickname           VARCHAR(50)  NOT NULL,
    handle             VARCHAR(50)  NOT NULL,
    level              INTEGER      NOT NULL,
    xp                 INTEGER      NOT NULL,
    created_at         TIMESTAMP(6) NOT NULL,
    is_onboarded       BOOLEAN,
    profile_img_number INTEGER      NOT NULL,
    CONSTRAINT uk_users_handle UNIQUE (handle),
    CONSTRAINT uk_users_provider_id UNIQUE (provider_id)
);

CREATE TABLE league
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name       VARCHAR(20) NOT NULL,
    min_lp     INTEGER     NOT NULL,
    max_lp     INTEGER     NOT NULL,
    sort_order INTEGER     NOT NULL,
    CONSTRAINT uk_league_sort_order UNIQUE (sort_order)
);

CREATE TABLE season
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    season_key VARCHAR(16)  NOT NULL,
    starts_at  TIMESTAMP(6) NOT NULL,
    ends_at    TIMESTAMP(6) NOT NULL,
    tz         VARCHAR(255) NOT NULL,
    status     VARCHAR(255) NOT NULL
        CHECK (status IN ('PREP', 'ACTIVE', 'FINALIZING', 'CLOSED')),
    CONSTRAINT uk_season_key UNIQUE (season_key)
);

CREATE TABLE chapter
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name        VARCHAR(50) NOT NULL,
    description TEXT        NOT NULL,
    total_units BIGINT      NOT NULL,
    CONSTRAINT uk_chapter_name UNIQUE (name),
    CONSTRAINT uk_chapter_description UNIQUE (description)
);

CREATE TABLE unit
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    chapter_id    BIGINT      NOT NULL,
    name          VARCHAR(50) NOT NULL,
    total_lessons BIGINT      NOT NULL
);

CREATE TABLE lesson
(
    id             BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    unit_id        BIGINT      NOT NULL,
    name           VARCHAR(50) NOT NULL,
    total_problems BIGINT      NOT NULL,
    CONSTRAINT uk_lesson_name UNIQUE (name)
);

CREATE TABLE problem
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    lesson_id    BIGINT       NOT NULL,
    question     TEXT         NOT NULL,
    content      TEXT         NOT NULL,
    answer       TEXT         NOT NULL,
    problem_type VARCHAR(255) NOT NULL
        CHECK (problem_type IN ('SUBJECTIVE', 'OBJECTIVE'))
);

CREATE TABLE friends
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    follower_id BIGINT NOT NULL,
    followee_id BIGINT NOT NULL,
    CONSTRAINT ux_friends_pair UNIQUE (follower_id, followee_id)
);

CREATE TABLE chapter_progress
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id         BIGINT NOT NULL,
    chapter_id      BIGINT NOT NULL,
    total_units     BIGINT NOT NULL,
    completed_units BIGINT NOT NULL,
    CONSTRAINT ux_cp_user UNIQUE (chapter_id, user_id)
);

CREATE TABLE unit_progress
(
    id                BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id           BIGINT NOT NULL,
    unit_id           BIGINT NOT NULL,
    total_lessons     BIGINT NOT NULL,
    completed_lessons BIGINT NOT NULL,
    CONSTRAINT ux_up_user UNIQUE (unit_id, user_id)
);

CREATE TABLE lesson_progress
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id       BIGINT  NOT NULL,
    lesson_id     BIGINT  NOT NULL,
    attempt_count INTEGER NOT NULL DEFAULT 0,
    learning_time INTEGER NOT NULL DEFAULT 0,
    is_completed  BOOLEAN NOT NULL,
    CONSTRAINT ux_lp_user UNIQUE (lesson_id, user_id)
);

CREATE TABLE problem_progress
(
    id               BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id          BIGINT       NOT NULL,
    problem_id       BIGINT       NOT NULL,
    is_correct       BOOLEAN      NOT NULL,
    incorrect_counts BIGINT       NOT NULL,
    created_at       TIMESTAMP(6) NOT NULL
);

CREATE TABLE learning
(
    id                   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id              BIGINT  NOT NULL,
    recent_chapter_id    BIGINT  NOT NULL,
    today_solved         BOOLEAN NOT NULL,
    consecutive_days     INTEGER NOT NULL,
    planet_conquest_rate INTEGER NOT NULL,
    version              BIGINT  NOT NULL,
    CONSTRAINT uk_learning_user UNIQUE (user_id)
);

CREATE TABLE user_league
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id      BIGINT       NOT NULL,
    league_id    BIGINT       NOT NULL,
    season_id    BIGINT       NOT NULL,
    league_point INTEGER      NOT NULL,
    updated_at   TIMESTAMP(6) NOT NULL
);

CREATE TABLE user_league_history
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id         BIGINT       NOT NULL,
    season_id       BIGINT       NOT NULL,
    final_league_id BIGINT       NOT NULL,
    final_lp        INTEGER      NOT NULL,
    final_rank      INTEGER      NOT NULL,
    created_at      TIMESTAMP(6) NOT NULL
);

CREATE TABLE option
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    problem_id  BIGINT  NOT NULL,
    content     TEXT    NOT NULL,
    explanation TEXT    NOT NULL,
    is_answer   BOOLEAN NOT NULL
);

CREATE TABLE mission
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mission_type  VARCHAR(50)                     NOT NULL,
    progress_rate DOUBLE PRECISION                NOT NULL DEFAULT 0.0,
    is_completed  BOOLEAN                         NOT NULL DEFAULT FALSE,
    user_id       BIGINT                          NOT NULL UNIQUE,
    version       BIGINT                          NOT NULL DEFAULT 0
);

CREATE TABLE report
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    report_type  VARCHAR(50) NOT NULL,
    content      TEXT,
    problem_id   BIGINT      NOT NULL,
    user_id      BIGINT      NOT NULL,
    is_resolved  BOOLEAN     NOT NULL DEFAULT FALSE,
    submitted_at TIMESTAMP   NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- 2) 외래키 (명시적 이름 부여)
ALTER TABLE unit
    ADD CONSTRAINT fk_unit__chapter
        FOREIGN KEY (chapter_id) REFERENCES chapter (id);

ALTER TABLE lesson
    ADD CONSTRAINT fk_lesson__unit
        FOREIGN KEY (unit_id) REFERENCES unit (id);

ALTER TABLE problem
    ADD CONSTRAINT fk_problem__lesson
        FOREIGN KEY (lesson_id) REFERENCES lesson (id);

ALTER TABLE friends
    ADD CONSTRAINT fk_friends__follower
        FOREIGN KEY (follower_id) REFERENCES users (id);
ALTER TABLE friends
    ADD CONSTRAINT fk_friends__followee
        FOREIGN KEY (followee_id) REFERENCES users (id);

ALTER TABLE chapter_progress
    ADD CONSTRAINT fk_chapter_progress__user
        FOREIGN KEY (user_id) REFERENCES users (id);
ALTER TABLE chapter_progress
    ADD CONSTRAINT fk_chapter_progress__chapter
        FOREIGN KEY (chapter_id) REFERENCES chapter (id);

ALTER TABLE unit_progress
    ADD CONSTRAINT fk_unit_progress__user
        FOREIGN KEY (user_id) REFERENCES users (id);
ALTER TABLE unit_progress
    ADD CONSTRAINT fk_unit_progress__unit
        FOREIGN KEY (unit_id) REFERENCES unit (id);

ALTER TABLE lesson_progress
    ADD CONSTRAINT fk_lesson_progress__user
        FOREIGN KEY (user_id) REFERENCES users (id);
ALTER TABLE lesson_progress
    ADD CONSTRAINT fk_lesson_progress__lesson
        FOREIGN KEY (lesson_id) REFERENCES lesson (id);

ALTER TABLE problem_progress
    ADD CONSTRAINT fk_problem_progress__user
        FOREIGN KEY (user_id) REFERENCES users (id);
ALTER TABLE problem_progress
    ADD CONSTRAINT fk_problem_progress__problem
        FOREIGN KEY (problem_id) REFERENCES problem (id);

ALTER TABLE learning
    ADD CONSTRAINT fk_learning__user
        FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE user_league
    ADD CONSTRAINT fk_user_league__user
        FOREIGN KEY (user_id) REFERENCES users (id);
ALTER TABLE user_league
    ADD CONSTRAINT fk_user_league__league
        FOREIGN KEY (league_id) REFERENCES league (id);
ALTER TABLE user_league
    ADD CONSTRAINT fk_user_league__season
        FOREIGN KEY (season_id) REFERENCES season (id);

ALTER TABLE user_league_history
    ADD CONSTRAINT fk_user_league_hist__user
        FOREIGN KEY (user_id) REFERENCES users (id);
ALTER TABLE user_league_history
    ADD CONSTRAINT fk_user_league_hist__season
        FOREIGN KEY (season_id) REFERENCES season (id);
ALTER TABLE user_league_history
    ADD CONSTRAINT fk_user_league_hist__league
        FOREIGN KEY (final_league_id) REFERENCES league (id);

ALTER TABLE option
    ADD CONSTRAINT fk_option__problem
        FOREIGN KEY (problem_id) REFERENCES problem (id);

ALTER TABLE mission
    ADD CONSTRAINT fk_mission__user
        FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE report
    ADD CONSTRAINT fk_report__user
        FOREIGN KEY (user_id) REFERENCES users (id);
ALTER TABLE report
    ADD CONSTRAINT fk_report__problem
        FOREIGN KEY (problem_id) REFERENCES problem (id);