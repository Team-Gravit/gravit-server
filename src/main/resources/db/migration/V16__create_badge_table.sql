-- V16__create_badge_table.sql
-- PostgreSQL

-- 1) 배지 관련 테이블
CREATE TABLE badge
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name            VARCHAR(255) NOT NULL,
    code            VARCHAR(255) NOT NULL,
    description     VARCHAR(255) NOT NULL,
    icon_id         INTEGER      NOT NULL,
    catergory_id    BIGINT       NOT NULL,
    criteria_type   VARCHAR(255) NOT NULL CHECK (
        criteria_type IN (
                          'PLANET_COMPLETE',
                          'ALL_PLANETS_COMPLETE',
                          'STREAK_DAYS',
                          'SPEED_QUALIFIED_COUNT',
                          'MISSION_COUNT'
            )
        ),
    criteria_params JSONB        NOT NULL,
    created_at      TIMESTAMP(6),
    updated_at      TIMESTAMP(6)
);

CREATE TABLE badge_category
(
    id   BIGINT       NOT NULL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    created_at TIMESTAMP(6),
    updated_at TIMESTAMP(6)
);

-- 2) 유저-배지 매핑 (중복 방지 유니크)
CREATE TABLE user_badge
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id    BIGINT NOT NULL,
    badge_id   BIGINT NOT NULL,
    created_at TIMESTAMP(6),
    updated_at TIMESTAMP(6),
    CONSTRAINT uk_user_badge UNIQUE (user_id, badge_id)
);

-- 3) 미션 통계
CREATE TABLE user_mission_stat
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id         BIGINT  NOT NULL,
    created_at TIMESTAMP(6),
    updated_at TIMESTAMP(6),
    completed_count INTEGER NOT NULL
);

-- 4) 행성(챕터) 완료 테이블
CREATE TABLE user_planet_completion
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id    BIGINT       NOT NULL,
    planet     VARCHAR(255) NOT NULL CHECK (
        planet IN (
                   'EARTH', 'MOON', 'MERCURY', 'VENUS',
                   'MARS', 'JUPITER', 'SATURN', 'URANUS'
            )
        ),
    created_at TIMESTAMP(6),
    updated_at TIMESTAMP(6),
    -- 중복 완료 방지 (권장)
    CONSTRAINT uk_user_planet_completion UNIQUE (user_id, planet)
);

-- 5) 문제 풀이(qualified) 통계
CREATE TABLE user_qualified_solve_stat
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id         BIGINT  NOT NULL,
    qualified_count INTEGER NOT NULL,
    created_at TIMESTAMP(6),
    updated_at TIMESTAMP(6)
);

alter table if exists user_badge
    add constraint FKjqx9n26pk9mqf1qo8f7xvvoq9
    foreign key (badge_id)
    references badge(id);

alter table if exists badge
    add constraint FKipea5ti1tdkofq8molh1lciyv
    foreign key (catergory_id)
    references badge_category(id);